#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    vector<int> start = {1, 3, 0, 5, 8, 5};
    vector<int> end = {2, 4, 6, 7, 9, 9};

    vector<pair<int, int>> meetings;
    for (int i = 0; i < start.size(); i++) {
        meetings.push_back(make_pair(start[i], end[i]));
    }

    sort(meetings.begin(), meetings.end(), [](const pair<int, int>& a, const pair<int, int>& b) {
        return a.second < b.second;
    });

    vector<pair<int, int>> selectedMeetings;
    int lastEndTime = 0; 
    for (const auto& meeting : meetings) {
        if (meeting.first >= lastEndTime) {
            selectedMeetings.push_back(meeting);
            lastEndTime = meeting.second;
        }
    }
    cout << "Maximum number of meetings: " << selectedMeetings.size() << endl;
    cout << "The meetings that can be scheduled without overlapping are:" << endl;
    for (const auto& meeting : selectedMeetings) {
        cout << "(" << meeting.first << "," << meeting.second << ")" << endl;
    }

    return 0;
}
